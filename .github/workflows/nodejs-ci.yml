name: Node.js CI

on:
  workflow_call:
    inputs:
      node-version:
        required: false
        type: string
        default: '22.13.1'
      test-command:
        required: false
        type: string
        default: 'npm run test:coverage'
      eslint-command:
        required: false
        type: string
        default: 'npx eslint .'
      install-command:
        required: false
        type: string
        default: 'npm install'
      fetch-depth:
        required: false
        type: string
        default: '0'
      pr-number:
        required: false
        type: string
      pr-branch:
        required: false
        type: string
      pr-base:
        required: false
        type: string
    secrets:
      SONAR_TOKEN:
        required: true
      GITHUB_TOKEN_SECRET:
        required: false

jobs:
  test-and-sonar:
    name: Tests and SonarQube
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: ${{ inputs.fetch-depth }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}

      - name: Install dependencies
        run: ${{ inputs.install-command }}

      - name: Run tests with coverage
        run: ${{ inputs.test-command }}

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN_SECRET }}
        with:
          args: >
            -Dsonar.pullrequest.key=${{ inputs.pr-number }}
            -Dsonar.pullrequest.branch=${{ inputs.pr-branch }}
            -Dsonar.pullrequest.base=${{ inputs.pr-base }}
            -Dsonar.pullrequest.provider=GitHub
            -Dsonar.pullrequest.github.repository=${{ github.repository }}
            -Dsonar.pullrequest.github.token.secured=${{ secrets.GITHUB_TOKEN_SECRET }}
            -Dsonar.verbose=true
            -Dsonar.log.level=DEBUG

  eslint:
    name: ESLint Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}

      - name: Install dependencies
        run: ${{ inputs.install-command }}

      - name: Run ESLint
        run: ${{ inputs.eslint-command }}

